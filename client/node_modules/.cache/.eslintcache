[{"/Users/matteogalli/GPO/C1R0/client/src/index.js":"1","/Users/matteogalli/GPO/C1R0/client/src/App.js":"2","/Users/matteogalli/GPO/C1R0/client/src/reportWebVitals.js":"3","/Users/matteogalli/GPO/C1R0/client/src/components/product.js":"4"},{"size":323,"mtime":1699809830786,"results":"5","hashOfConfig":"6"},{"size":5579,"mtime":1700583292495,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1699693634583,"results":"8","hashOfConfig":"6"},{"size":580,"mtime":1699798633360,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9fc0qg",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matteogalli/GPO/C1R0/client/src/index.js",[],[],"/Users/matteogalli/GPO/C1R0/client/src/App.js",["23"],[],"import \"./App.css\";\nimport Product from \"./components/product\";\nimport io from \"socket.io-client\";\nimport { useEffect } from \"react\";\n\n//inserire il proprio ip\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n\n  let isRecived = false;\n  let totalAmount = 0;\n\n  const products = [\n    new Product(\"CocaCola\", \"Prodotta da CocaCola\", 3.0, 1),\n    new Product(\"Fanta\", \"Prodotta da CocaCola\", 3.0, 1),\n    new Product(\"Sprite\", \"Prodotta da CocaCola\", 3.0, 1),\n    new Product(\"Acqua\", \"Prodotta da San Benedetto\", 1.5, 1),\n    new Product(\"Matriciana\", \"a base di zucchine\", 13.0, 0),\n    new Product(\"Pasta al ragù\", \"presenta lattosio\", 3.0, 0),\n    new Product(\"Pasta al pesto\", \"Non adatta ai celiaci\", 3.0, 0),\n    new Product(\"Tiramisù\", \"Fatto in casa\", 1.5, 4),\n    new Product(\"Patatine San Carlo\", \"Prodotta da CocaCola\", 3.0, 2),\n    new Product(\"Coca e Monte \", \"Gradazione : 11\", 7.0, 3),\n    new Product(\"Spritz\", \"Gradazione: 11\", 5.0, 3),\n  ];\n\n  useEffect(() => {\n    socket.on(\"msg_recived\", (data) => {\n      if (!isRecived) {\n        if (data === \"true\") {\n          var orderTextArea = document.getElementById(\"orderMask\");\n          orderTextArea.innerHTML = \"Il totale è \" + totalAmount + \"€\";\n          var modal = document.getElementById(\"myModal\");\n          var span = document.getElementsByClassName(\"close\")[0];\n          modal.style.display = \"block\";\n          span.onclick = function () {\n            modal.style.display = \"none\";\n            resetUI();\n          };\n        }\n      }\n    });\n  }, [socket]);\n\n  const sendMessage = () => {\n    let TableNumber = document.getElementById(\"inputTable\").value;\n    if (TableNumber.trim().length > 0) {\n      let msg = \"Tavolo: \" + TableNumber + \";\";\n      let itemOrdered = 0;\n      products.forEach((prd) => {\n        if (prd.amount > 0) {\n          itemOrdered++;\n          msg += prd.name + \":\" + prd.amount + \"&\";\n        }\n      });\n      if (itemOrdered > 0) {\n        msg += \"\\n\";\n        socket.emit(\"sendData\", msg);\n      } else {\n        alert(\"DEVI ORDINARE ALMENO UN PRODOTTO\");\n      }\n    } else {\n      alert(\"DEVI INSERIRE IL NUMERO DEL TAVOLO\");\n    }\n  };\n\n  const productArea = () => {\n    return (\n      <ul id=\"prodList\">\n        {products.map((item, index) =>(\n            <li key={index}>\n              <div className=\"product\">\n                <button\n                  className=\"btnRemove\"\n                  onClick={() => {\n                    const precCount = item.amount;\n                    if (item.amount > 0) {\n                      item.amount = item.amount - 1;\n                    }\n                    document.getElementById(index).innerHTML =\n                      item.name +\n                      \" ( \" +\n                      item.price +\n                      \"€ ) x \" +\n                      item.amount +\n                      \"<br/> <span>\" +\n                      item.description +\n                      \"</span>\";\n                    if (precCount > 0) {\n                      totalAmount -= item.price;\n                      document.getElementById(\"totalAmount\").innerHTML =\n                        totalAmount;\n                    }\n                  }}\n                >\n                  -\n                </button>\n                <div className=\"lblProduct\" id={index}>\n                  {item.name} ( {item.price}$ ) x {item.amount} <br />{\" \"}\n                  <span>{item.description}</span>\n                </div>\n                <button\n                  className=\"btnAdd\"\n                  onClick={() => {\n                    item.amount = item.amount + 1;\n                    document.getElementById(index).innerHTML =\n                      item.name +\n                      \" ( \" +\n                      item.price +\n                      \"€ ) x \" +\n                      item.amount +\n                      \"<br/> <span>\" +\n                      item.description +\n                      \"</span>\";\n                    totalAmount += item.price;\n                    document.getElementById(\"totalAmount\").innerHTML =\n                      totalAmount;\n                  }}\n                >\n                  +\n                </button>\n              </div>\n            </li>\n          )\n        )}\n      </ul>\n    );\n  };\n\n  const resetUI = () => {\n    totalAmount = 0;\n    isRecived = false;\n    let i = 0;\n    products.forEach((element) => {\n      element.amount = 0;\n      document.getElementById(i).innerHTML =\n        element.name +\n        \" ( \" +\n        element.price +\n        \"€ ) x \" +\n        element.amount +\n        \"<br/> <span>\" +\n        element.description +\n        \"</span>\";\n      i++;\n    });\n    document.getElementById(\"totalAmount\").innerHTML = totalAmount;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <input type=\"number\" id=\"inputTable\" placeholder=\"Numero Tavolo\" />\n        <button onClick={sendMessage}>Send message</button>\n      </div>\n      <div className=\"main\">\n        <ul id=\"productArea\">{productArea()}</ul>\n      </div>\n      <div className=\"footer\">\n        <span>\n          Totale <span id=\"totalAmount\">0.0</span>€\n        </span>\n      </div>\n      <div id=\"myModal\" className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\">&times;</span>\n          <div className=\"text-modal\">\n            <h1>L'ordine è andato a buon fine</h1>\n            <h2 id=\"orderMask\">L'ordine è andato a buon fine</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/matteogalli/GPO/C1R0/client/src/reportWebVitals.js",[],[],"/Users/matteogalli/GPO/C1R0/client/src/components/product.js",[],[],{"ruleId":"24","severity":1,"message":"25","line":44,"column":6,"nodeType":"26","endLine":44,"endColumn":14,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isRecived', 'resetUI', and 'totalAmount'. Either include them or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [isRecived, resetUI, totalAmount]",{"range":"31","text":"32"},[1549,1557],"[isRecived, resetUI, totalAmount]"]